{"version":3,"file":"index.js","sources":["source/error-reporter.js","source/utils.js","source/checker.js"],"sourcesContent":["import { ConsoleErrorReporter } from '@actualwave/type-checker-simple-reporting';\n\nlet errorReporter = ConsoleErrorReporter;\n\nexport const getErrorReporter = () => errorReporter;\n\nexport const setErrorReporter = (value) => {\n  errorReporter = value;\n};\n","import { getErrorReporter } from './error-reporter';\n\nexport const MERGE = '(Merge)';\nexport const GET_PROPERTY = '(GetProperty)';\nexport const SET_PROPERTY = '(SetProperty)';\nexport const ARGUMENTS = '(Arguments)';\nexport const RETURN_VALUE = '(ReturnValue)';\n\nexport const checkPrimitiveType = (action, storage, target, names, type) => {\n  if (!type) {\n    return true;\n  }\n\n  const { lastName } = names;\n\n  const missingType = storage.has(lastName) && !storage.hasValue(lastName, type);\n\n  if (missingType) {\n    const errorReporter = getErrorReporter();\n\n    errorReporter(action, names.toString(), storage.list(lastName).join(', '), type);\n  }\n\n  storage.addFor(lastName, type, target);\n\n  return !missingType;\n};\n\nexport const getTypeValue = (value) => {\n  if (value === undefined) {\n    return '';\n  }\n\n  const type = typeof value;\n\n  if (type === 'object' && value instanceof Array) {\n    return 'array';\n  }\n\n  return type;\n};\n","/* eslint-disable class-methods-use-this */\nimport { createTypesStorage } from '@actualwave/type-checker-levels-storage';\n\nimport { getErrorReporter } from './error-reporter';\n\nimport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  checkPrimitiveType,\n  getTypeValue,\n} from './utils';\n\nclass PrimitiveTypeChecker {\n  constructor(collectTypesOnInit = true, enableGetChecker = true) {\n    this.collectTypesOnInit = collectTypesOnInit;\n    this.enableGetChecker = enableGetChecker;\n  }\n\n  init(target, cachedStorage = null) {\n    let storage;\n\n    if (cachedStorage) {\n      storage = cachedStorage;\n    } else if (this.collectTypesOnInit) {\n      storage = createTypesStorage();\n      Object.keys(target).forEach((key) =>\n        storage.addFor(key, this.getTypeValue(target[key]), target),\n      );\n    }\n\n    return storage;\n  }\n\n  getTypeValue(value) {\n    return getTypeValue(value);\n  }\n\n  checkType(action, storage, target, names, type) {\n    return checkPrimitiveType(action, storage, target, names, type);\n  }\n\n  /**\n   * FIXME add function to @actualwave/type-checker-levels-storage to merge configs\n   * this function should accept storages and merge strategy callback which will\n   * receive type info and decide what should be merged and what not\n   */\n  mergeConfigs(storage, sourceStorage, names) {\n    const errorReporter = getErrorReporter();\n\n    sourceStorage.copyTo(storage, null, (key, target, source) => {\n      const targetFirstValue = target.values().next().value;\n\n      source.forEach((sourceType) => {\n        if (!target.has(sourceType)) {\n          target.add(sourceType);\n\n          if (targetFirstValue) {\n            errorReporter(MERGE, names, targetFirstValue, sourceType);\n          }\n        }\n      });\n\n      return target;\n    });\n  }\n\n  getProperty(target, names, value, storage) {\n    if (!this.enableGetChecker) {\n      return true;\n    }\n\n    const type = this.getTypeValue(value);\n\n    return this.checkType(GET_PROPERTY, storage, target, names, type);\n  }\n\n  setProperty(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n\n    return this.checkType(SET_PROPERTY, storage, target, names, type);\n  }\n\n  arguments(target, names, args, storage) {\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeValue(args[index]);\n      const agrValid = this.checkType(ARGUMENTS, storage, target, names.clone(index), type);\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n\n    const callNames = names.clone();\n    callNames.appendCustomValue(RETURN_VALUE);\n\n    return this.checkType(RETURN_VALUE, storage, target, callNames, type);\n  }\n}\n\nexport const createPrimitiveTypeChecker = (collectTypesOnInit = true, enableGetChecker = true) =>\n  new PrimitiveTypeChecker(collectTypesOnInit, enableGetChecker);\n\nexport default PrimitiveTypeChecker;\n"],"names":["errorReporter","ConsoleErrorReporter","getErrorReporter","setErrorReporter","value","MERGE","GET_PROPERTY","SET_PROPERTY","ARGUMENTS","RETURN_VALUE","checkPrimitiveType","action","storage","target","names","type","lastName","missingType","has","hasValue","toString","list","join","addFor","getTypeValue","undefined","Array","PrimitiveTypeChecker","constructor","collectTypesOnInit","enableGetChecker","init","cachedStorage","createTypesStorage","Object","keys","forEach","key","checkType","mergeConfigs","sourceStorage","copyTo","source","targetFirstValue","values","next","sourceType","add","getProperty","setProperty","arguments","args","length","valid","index","agrValid","clone","returnValue","callNames","appendCustomValue","createPrimitiveTypeChecker"],"mappings":"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"}