{"version":3,"file":"index.js","sources":["source/error-reporter.js","source/utils.js","source/checker.js","source/index.js"],"sourcesContent":["import { ConsoleErrorReporter } from '@actualwave/type-checker-simple-reporting';\r\n\r\nlet errorReporter = ConsoleErrorReporter;\r\n\r\nexport const getErrorReporter = () => errorReporter;\r\n\r\nexport const setErrorReporter = (value) => {\r\n  errorReporter = value;\r\n};\r\n","import { getErrorReporter } from './error-reporter';\n\nexport const MERGE = '(Merge)';\nexport const GET_PROPERTY = '(GetProperty)';\nexport const SET_PROPERTY = '(SetProperty)';\nexport const ARGUMENTS = '(Arguments)';\nexport const RETURN_VALUE = '(ReturnValue)';\n\nexport const checkPrimitiveType = (action, storage, target, names, type) => {\n  if (!type) {\n    return true;\n  }\n\n  const { lastName } = names;\n\n  const storedType = storage.hasType(lastName);\n\n  if (storedType) {\n    if (storedType !== type) {\n      const errorReporter = getErrorReporter();\n\n      errorReporter(action, names.toString(), storedType, type);\n\n      return false;\n    }\n  } else {\n    storage.addFor(lastName, type, target);\n  }\n\n  return true;\n};\n","/* eslint-disable class-methods-use-this */\nimport { createTypesStorage } from '@actualwave/type-checker-levels-storage';\n\nimport { getErrorReporter } from './error-reporter';\n\nimport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  checkPrimitiveType,\n} from './utils';\n\nclass PrimitiveTypeChecker {\n  constructor(collectTypesOnInit = true) {\n    this.collectTypesOnInit = collectTypesOnInit;\n  }\n\n  init(target, cachedStorage = null) {\n    let storage;\n\n    if (cachedStorage) {\n      storage = cachedStorage;\n    } else if (this.collectTypesOnInit) {\n      storage = createTypesStorage();\n      Object.keys(target).forEach((key) =>\n        storage.addFor(key, this.getTypeValue(target[key]), target),\n      );\n    }\n\n    return storage;\n  }\n\n  getTypeValue(value) {\n    if (value === undefined) {\n      return '';\n    }\n\n    const type = typeof value;\n\n    if (type === 'object' && value instanceof Array) {\n      return 'array';\n    }\n\n    return type;\n  }\n\n  /**\n   * FIXME add function to @actualwave/type-checker-levels-storage to merge configs\n   * this function should accept storages and merge strategy callback which will\n   * receive type info and decide what should be merged and what not\n   */\n  mergeConfigs(storage, sourceStorage, names) {\n    const errorReporter = getErrorReporter();\n\n    sourceStorage.copyTo(storage, null, (key, target, source) => {\n      const targetFirstValue = target.values().next().value;\n\n      source.forEach((sourceType) => {\n        if (!target.has(sourceType)) {\n          target.add(sourceType);\n\n          if (targetFirstValue) {\n            errorReporter(MERGE, names, targetFirstValue, sourceType);\n          }\n        }\n      });\n\n      return target;\n    });\n  }\n\n  getProperty(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n\n    /**\n     * FIXME this function also stores new type information, so it must receive target\n     * or reporting level to work properly\n     * or callback to store new type value\n     */\n    return checkPrimitiveType(GET_PROPERTY, storage, target, names, type);\n  }\n\n  setProperty(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n\n    return checkPrimitiveType(SET_PROPERTY, storage, target, names, type);\n  }\n\n  arguments(target, names, args, storage) {\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeValue(args[index]);\n      const agrValid = checkPrimitiveType(ARGUMENTS, storage, target, names.clone(index), type);\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, names, value, storage) {\n    const type = this.getTypeValue(value);\n\n    const callNames = storage.clone();\n    callNames.appendCustomValue(RETURN_VALUE);\n\n    return checkPrimitiveType(RETURN_VALUE, storage, target, callNames, type);\n  }\n}\n\nexport const createPrimitiveTypeChecker = (collectTypesOnInit) =>\n  new PrimitiveTypeChecker(collectTypesOnInit);\n\nexport default PrimitiveTypeChecker;\n","/* eslint-disable class-methods-use-this */\nimport { getErrorReporter, setErrorReporter } from './error-reporter';\n\nimport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  checkPrimitiveType,\n} from './utils';\n\nimport PrimitiveTypeChecker, { createPrimitiveTypeChecker } from './checker';\n\nexport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  checkPrimitiveType,\n  PrimitiveTypeChecker,\n  createPrimitiveTypeChecker,\n  getErrorReporter,\n  setErrorReporter,\n};\n"],"names":["errorReporter","ConsoleErrorReporter","getErrorReporter","setErrorReporter","value","MERGE","GET_PROPERTY","SET_PROPERTY","ARGUMENTS","RETURN_VALUE","checkPrimitiveType","action","storage","target","names","type","lastName","storedType","hasType","toString","addFor","PrimitiveTypeChecker","constructor","collectTypesOnInit","init","cachedStorage","createTypesStorage","Object","keys","forEach","key","getTypeValue","undefined","Array","mergeConfigs","sourceStorage","copyTo","source","targetFirstValue","values","next","sourceType","has","add","getProperty","setProperty","arguments","args","length","valid","index","agrValid","clone","returnValue","callNames","appendCustomValue","createPrimitiveTypeChecker"],"mappings":"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"}