{"version":3,"file":"primitive-type-checker.js","sources":["../node_modules/@actualwave/type-checkers/source/checkers/utils.js","../source/index.js"],"sourcesContent":["\nexport const GET_PROPERTY = '(GetProperty)';\nexport const SET_PROPERTY = '(SetProperty)';\nexport const INDEX = '(Index)';\nexport const ARGUMENTS = '(Arguments)';\nexport const RETURN_VALUE = '(ReturnValue)';\nexport const MERGE = '(Merge)';\n\nexport function AsIs(value) {\n  if (this instanceof AsIs) {\n    this.value = value;\n  } else {\n    return new AsIs(value);\n  }\n}\n\nfunction asIs() {\n  return this.value;\n}\n\nAsIs.prototype.toString = asIs;\nAsIs.prototype.valueOf = asIs;\nAsIs.prototype[Symbol.toPrimitive] = asIs;\n\nexport const buildPath = (sequence) => sequence\n  .reduce((str, name) => {\n    if (name instanceof AsIs) {\n      str = `${str}${name}`;\n    } else if (String(parseInt(name, 10)) === name) {\n      str = `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      str = str ? `${str}.${name}` : name;\n    } else {\n      str = `${str}[\"${name}\"]`;\n    }\n\n    return str;\n  }, '');\n","import {\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  MERGE,\n  buildPath,\n  AsIs,\n} from '@actualwave/type-checkers/source/checkers/utils';\n\nconst checkPrimitiveType = (action, types, name, type, errorReporter, sequence) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), storedType, type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n\nexport const mergeConfigs = ({ types, errorReporter }, source, names = []) => {\n  const sourceTypes = source.types;\n\n  for (const name in sourceTypes) {\n    if (sourceTypes.hasOwnProperty(name)) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n\n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(MERGE, buildPath([...names, name]), targetType, sourceType);\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  }\n\n  return { types, errorReporter };\n};\n\nexport const getTypeString = (value) => {\n  if (value === undefined) {\n    return '';\n  } else if (value instanceof Array) {\n    return 'array';\n  }\n\n  return typeof value;\n};\n\nconst PrimitiveTypeChecker = {\n  collectTypesOnInit: true,\n  areArrayElementsOfSameType: true,\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target)\n        .forEach((key) => {\n          types[key] = getTypeString(target[key]);\n        });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  },\n\n  getProperty(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(GET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  setProperty(target, name, newValue, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = getTypeString(newValue);\n\n    return checkPrimitiveType(SET_PROPERTY, types, name, type, errorReporter, sequence);\n  },\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(ARGUMENTS, types, String(index), type, errorReporter, sequence);\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  },\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n\n    const type = getTypeString(value);\n\n    return checkPrimitiveType(RETURN_VALUE, types, AsIs(RETURN_VALUE), type, errorReporter, sequence);\n  },\n  getTypeString,\n  mergeConfigs,\n};\n\nexport default PrimitiveTypeChecker;\n"],"names":["checkPrimitiveType","action","types","name","type","errorReporter","sequence","storedType","buildPath","mergeConfigs","source","names","sourceTypes","hasOwnProperty","sourceType","targetType","MERGE","getTypeString","value","undefined","Array","PrimitiveTypeChecker","collectTypesOnInit","areArrayElementsOfSameType","init","target","cachedTypes","Object","keys","forEach","key","getProperty","config","GET_PROPERTY","setProperty","newValue","SET_PROPERTY","arguments","thisArg","args","length","valid","index","agrValid","ARGUMENTS","String","returnValue","RETURN_VALUE","AsIs"],"mappings":"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"}