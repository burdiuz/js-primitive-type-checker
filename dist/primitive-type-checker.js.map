{"version":3,"file":"primitive-type-checker.js","sources":["../source/utils.js","../source/index.js"],"sourcesContent":["export const MERGE = '(Merge)';\nexport const GET_PROPERTY = '(GetProperty)';\nexport const SET_PROPERTY = '(SetProperty)';\nexport const ARGUMENTS = '(Arguments)';\nexport const RETURN_VALUE = '(ReturnValue)';\n\nexport function AsIs(value) {\n  if (this instanceof AsIs) {\n    this.value = value;\n  } else {\n    return new AsIs(value);\n  }\n}\n\nfunction asIs() {\n  return this.value;\n}\n\nAsIs.prototype.toString = asIs;\nAsIs.prototype.valueOf = asIs;\nAsIs.prototype[Symbol.toPrimitive] = asIs;\n\nexport const buildPath = (sequence) =>\n  sequence.reduce((str, name) => {\n    if (name instanceof AsIs) {\n      return `${str}${name}`;\n    } else if (String(parseInt(name, 10)) === name) {\n      return `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      return str ? `${str}.${name}` : name;\n    }\n\n    return `${str}[\"${name}\"]`;\n  }, '');\n\nexport const checkPrimitiveType = (\n  action,\n  types,\n  name,\n  type,\n  errorReporter,\n  sequence,\n) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), storedType, type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n","import hasOwn from '@actualwave/hasOwn';\n\nimport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  buildPath,\n  AsIs,\n  checkPrimitiveType,\n} from './utils';\n\nconst mergeConfigs = ({ types, errorReporter }, source, names = []) => {\n  const sourceTypes = source.types;\n\n  for (const name in sourceTypes) {\n    if (hasOwn(sourceTypes, name)) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n\n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(\n          MERGE,\n          buildPath([...names, name]),\n          targetType,\n          sourceType,\n        );\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  }\n\n  return { types, errorReporter };\n};\n\nconst getTypeString = (value) => {\n  if (value === undefined) {\n    return '';\n  } else if (value instanceof Array) {\n    return 'array';\n  }\n\n  return typeof value;\n};\n\nconst propertyCheckerFactory = (action) => {\n  function checkValueType(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      action,\n      types,\n      name,\n      type,\n      errorReporter,\n      sequence,\n    );\n  }\n\n  return checkValueType;\n};\n\nconst getPropertyChecker = propertyCheckerFactory(GET_PROPERTY);\nconst setPropertyChecker = propertyCheckerFactory(SET_PROPERTY);\n\nclass PrimitiveTypeChecker {\n  collectTypesOnInit = true;\n  getTypeString = getTypeString;\n  mergeConfigs = mergeConfigs;\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target).forEach((key) => {\n        types[key] = getTypeString(target[key]);\n      });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  }\n\n  getProperty(target, name, value, config, sequence) {\n    return getPropertyChecker.call(this, target, name, value, config, sequence);\n  }\n\n  setProperty(target, name, value, config, sequence) {\n    return setPropertyChecker.call(this, target, name, value, config, sequence);\n  }\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(\n        ARGUMENTS,\n        types,\n        String(index),\n        type,\n        errorReporter,\n        sequence,\n      );\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      RETURN_VALUE,\n      types,\n      AsIs(RETURN_VALUE),\n      type,\n      errorReporter,\n      sequence,\n    );\n  }\n}\n\nexport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  buildPath,\n  AsIs,\n  checkPrimitiveType,\n  mergeConfigs,\n  getTypeString,\n  propertyCheckerFactory,\n  PrimitiveTypeChecker,\n};\n\nexport default PrimitiveTypeChecker;\n"],"names":["MERGE","GET_PROPERTY","SET_PROPERTY","ARGUMENTS","RETURN_VALUE","AsIs","value","asIs","prototype","toString","valueOf","Symbol","toPrimitive","buildPath","sequence","reduce","str","name","String","parseInt","test","checkPrimitiveType","action","types","type","errorReporter","storedType","mergeConfigs","source","names","sourceTypes","hasOwn","sourceType","targetType","getTypeString","undefined","Array","propertyCheckerFactory","checkValueType","target","config","getPropertyChecker","setPropertyChecker","PrimitiveTypeChecker","collectTypesOnInit","cachedTypes","keys","forEach","key","call","thisArg","args","length","valid","index","agrValid"],"mappings":";;;;;;;;MAAaA,QAAQ,SAAd;AACP,MAAaC,eAAe,eAArB;AACP,MAAaC,eAAe,eAArB;AACP,MAAaC,YAAY,aAAlB;AACP,MAAaC,eAAe,eAArB;;AAEP,AAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;MACtB,gBAAgBD,IAApB,EAA0B;SACnBC,KAAL,GAAaA,KAAb;GADF,MAEO;WACE,IAAID,IAAJ,CAASC,KAAT,CAAP;;;;AAIJ,SAASC,IAAT,GAAgB;SACP,KAAKD,KAAZ;;;AAGFD,KAAKG,SAAL,CAAeC,QAAf,GAA0BF,IAA1B;AACAF,KAAKG,SAAL,CAAeE,OAAf,GAAyBH,IAAzB;AACAF,KAAKG,SAAL,CAAeG,OAAOC,WAAtB,IAAqCL,IAArC;;AAEA,MAAaM,YAAaC,QAAD,IACvBA,SAASC,MAAT,CAAgB,CAACC,GAAD,EAAMC,IAAN,KAAe;MACzBA,gBAAgBZ,IAApB,EAA0B;WAChB,GAAEW,GAAI,GAAEC,IAAK,EAArB;GADF,MAEO,IAAIC,OAAOC,SAASF,IAAT,EAAe,EAAf,CAAP,MAA+BA,IAAnC,EAAyC;WACtC,GAAED,GAAI,IAAGC,IAAK,GAAtB;GADK,MAEA,IAAI,iBAAiBG,IAAjB,CAAsBH,IAAtB,CAAJ,EAAiC;WAC/BD,MAAO,GAAEA,GAAI,IAAGC,IAAK,EAArB,GAAyBA,IAAhC;;;SAGM,GAAED,GAAI,KAAIC,IAAK,IAAvB;CATF,EAUG,EAVH,CADK;;AAaP,MAAaI,qBAAqB,CAChCC,MADgC,EAEhCC,KAFgC,EAGhCN,IAHgC,EAIhCO,IAJgC,EAKhCC,aALgC,EAMhCX,QANgC,KAO7B;MACC,CAACU,IAAL,EAAW;WACF,IAAP;;;QAGIE,aAAaH,MAAMN,IAAN,CAAnB;;MAEIS,UAAJ,EAAgB;QACVA,eAAeF,IAAnB,EAAyB;oBACTF,MAAd,EAAsBT,UAAU,CAAC,GAAGC,QAAJ,EAAcG,IAAd,CAAV,CAAtB,EAAsDS,UAAtD,EAAkEF,IAAlE;;aAEO,KAAP;;GAJJ,MAMO;UACCP,IAAN,IAAcO,IAAd;;;SAGK,IAAP;CAxBK;;MCtBDG,eAAe,CAAC,EAAEJ,KAAF,EAASE,aAAT,EAAD,EAA2BG,MAA3B,EAAmCC,QAAQ,EAA3C,KAAkD;QAC/DC,cAAcF,OAAOL,KAA3B;;OAEK,MAAMN,IAAX,IAAmBa,WAAnB,EAAgC;QAC1BC,OAAOD,WAAP,EAAoBb,IAApB,CAAJ,EAA+B;YACvBe,aAAaF,YAAYb,IAAZ,CAAnB;YACMgB,aAAaV,MAAMN,IAAN,CAAnB;;UAEIe,cAAcC,UAAd,IAA4BA,eAAeD,UAA/C,EAA2D;sBAEvDhC,KADF,EAEEa,UAAU,CAAC,GAAGgB,KAAJ,EAAWZ,IAAX,CAAV,CAFF,EAGEgB,UAHF,EAIED,UAJF;OADF,MAOO;cACCf,IAAN,IAAce,UAAd;;;;;SAKC,EAAET,KAAF,EAASE,aAAT,EAAP;CArBF;;AAwBA,MAAMS,gBAAiB5B,KAAD,IAAW;MAC3BA,UAAU6B,SAAd,EAAyB;WAChB,EAAP;GADF,MAEO,IAAI7B,iBAAiB8B,KAArB,EAA4B;WAC1B,OAAP;;;SAGK,OAAO9B,KAAd;CAPF;;AAUA,MAAM+B,yBAA0Bf,MAAD,IAAY;WAChCgB,cAAT,CAAwBC,MAAxB,EAAgCtB,IAAhC,EAAsCX,KAAtC,EAA6CkC,MAA7C,EAAqD1B,QAArD,EAA+D;UACvD,EAAES,KAAF,EAASE,aAAT,KAA2Be,MAAjC;UACMhB,OAAO,KAAKU,aAAL,CAAmB5B,KAAnB,CAAb;;WAEOe,mBACLC,MADK,EAELC,KAFK,EAGLN,IAHK,EAILO,IAJK,EAKLC,aALK,EAMLX,QANK,CAAP;;;SAUKwB,cAAP;CAfF;;AAkBA,MAAMG,qBAAqBJ,uBAAuBpC,YAAvB,CAA3B;AACA,MAAMyC,qBAAqBL,uBAAuBnC,YAAvB,CAA3B;;AAEA,MAAMyC,oBAAN,CAA2B;;SACzBC,kBADyB,GACJ,IADI;SAEzBV,aAFyB,GAETA,aAFS;SAGzBP,YAHyB,GAGVA,YAHU;;;OAKpBY,MAAL,EAAad,aAAb,EAA4BoB,cAAc,IAA1C,EAAgD;QAC1CtB,QAAQ,EAAZ;;QAEIsB,WAAJ,EAAiB;cACPA,WAAR;KADF,MAEO,IAAI,KAAKD,kBAAT,EAA6B;aAC3BE,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA6BC,GAAD,IAAS;cAC7BA,GAAN,IAAad,cAAcK,OAAOS,GAAP,CAAd,CAAb;OADF;;;WAKK;WAAA;;KAAP;;;cAMUT,MAAZ,EAAoBtB,IAApB,EAA0BX,KAA1B,EAAiCkC,MAAjC,EAAyC1B,QAAzC,EAAmD;WAC1C2B,mBAAmBQ,IAAnB,CAAwB,IAAxB,EAA8BV,MAA9B,EAAsCtB,IAAtC,EAA4CX,KAA5C,EAAmDkC,MAAnD,EAA2D1B,QAA3D,CAAP;;;cAGUyB,MAAZ,EAAoBtB,IAApB,EAA0BX,KAA1B,EAAiCkC,MAAjC,EAAyC1B,QAAzC,EAAmD;WAC1C4B,mBAAmBO,IAAnB,CAAwB,IAAxB,EAA8BV,MAA9B,EAAsCtB,IAAtC,EAA4CX,KAA5C,EAAmDkC,MAAnD,EAA2D1B,QAA3D,CAAP;;;YAGQyB,MAAV,EAAkBW,OAAlB,EAA2BC,IAA3B,EAAiCX,MAAjC,EAAyC1B,QAAzC,EAAmD;UAC3C,EAAES,KAAF,EAASE,aAAT,KAA2Be,MAAjC;;UAEM,EAAEY,MAAF,KAAaD,IAAnB;QACIE,QAAQ,IAAZ;;SAEK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQF,MAA5B,EAAoCE,OAApC,EAA6C;YACrC9B,OAAO,KAAKU,aAAL,CAAmBiB,KAAKG,KAAL,CAAnB,CAAb;YACMC,WAAWlC,mBACflB,SADe,EAEfoB,KAFe,EAGfL,OAAOoC,KAAP,CAHe,EAIf9B,IAJe,EAKfC,aALe,EAMfX,QANe,CAAjB;;cASQyC,YAAYF,KAApB;;;WAGKA,KAAP;;;cAGUd,MAAZ,EAAoBW,OAApB,EAA6B5C,KAA7B,EAAoCkC,MAApC,EAA4C1B,QAA5C,EAAsD;UAC9C,EAAES,KAAF,EAASE,aAAT,KAA2Be,MAAjC;UACMhB,OAAO,KAAKU,aAAL,CAAmB5B,KAAnB,CAAb;;WAEOe,mBACLjB,YADK,EAELmB,KAFK,EAGLlB,KAAKD,YAAL,CAHK,EAILoB,IAJK,EAKLC,aALK,EAMLX,QANK,CAAP;;;;;;;;;;;;;;;;;;"}