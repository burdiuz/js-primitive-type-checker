{"version":3,"file":"primitive-type-checker.min.js","sources":["../node_modules/@actualwave/hasOwn/hasOwn.js","../source/index.js"],"sourcesContent":["const hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexport default hasOwn;","import hasOwn from '@actualwave/hasOwn';\n\nimport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  buildPath,\n  AsIs,\n  checkPrimitiveType,\n} from '@actualwave/primitive-type-checker/utils';\n\nexport const mergeConfigs = ({ types, errorReporter }, source, names = []) => {\n  const sourceTypes = source.types;\n\n  for (const name in sourceTypes) {\n    if (hasOwn(sourceTypes, name)) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n\n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(\n          MERGE,\n          buildPath([...names, name]),\n          targetType,\n          sourceType,\n        );\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  }\n\n  return { types, errorReporter };\n};\n\nexport const getTypeString = (value) => {\n  if (value === undefined) {\n    return '';\n  } else if (value instanceof Array) {\n    return 'array';\n  }\n\n  return typeof value;\n};\n\nexport const propertyCheckerFactory = (action) => {\n  function checkValueType(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      action,\n      types,\n      name,\n      type,\n      errorReporter,\n      sequence,\n    );\n  }\n\n  return checkValueType;\n};\n\nconst getPropertyChecker = propertyCheckerFactory(GET_PROPERTY);\nconst setPropertyChecker = propertyCheckerFactory(SET_PROPERTY);\n\nclass PrimitiveTypeChecker {\n  collectTypesOnInit = true;\n  getTypeString = getTypeString;\n  mergeConfigs = mergeConfigs;\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target).forEach((key) => {\n        types[key] = getTypeString(target[key]);\n      });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  }\n\n  getProperty(target, name, value, config, sequence) {\n    return getPropertyChecker.call(this, target, name, value, config, sequence);\n  }\n\n  setProperty(target, name, value, config, sequence) {\n    return setPropertyChecker.call(this, target, name, value, config, sequence);\n  }\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(\n        ARGUMENTS,\n        types,\n        String(index),\n        type,\n        errorReporter,\n        sequence,\n      );\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      RETURN_VALUE,\n      types,\n      AsIs(RETURN_VALUE),\n      type,\n      errorReporter,\n      sequence,\n    );\n  }\n}\n\nexport default PrimitiveTypeChecker;\n"],"names":["hasOwn","has","target","property","Boolean","call","Object","prototype","hasOwnProperty","mergeConfigs","types","errorReporter","source","names","sourceTypes","name","sourceType","targetType","MERGE","buildPath","getTypeString","value","undefined","Array","propertyCheckerFactory","action","config","sequence","type","this","checkPrimitiveType","getPropertyChecker","GET_PROPERTY","setPropertyChecker","SET_PROPERTY","collectTypesOnInit","cachedTypes","keys","forEach","key","thisArg","args","length","valid","index","ARGUMENTS","String","RETURN_VALUE","AsIs"],"mappings":"gTAAA,MAAMA,EAAS,CACZC,GACD,CAACC,EAAQC,IACTC,QAAQF,GAAUD,EAAII,KAAKH,EAAQC,IAHtB,CAIbG,OAAOC,UAAUC,gBCSNC,EAAe,EAAGC,MAAAA,EAAOC,cAAAA,GAAiBC,EAAQC,cACvDC,EAAcF,EAAOF,UAEtB,MAAMK,KAAQD,KACbd,EAAOc,EAAaC,GAAO,OACvBC,EAAaF,EAAYC,GACzBE,EAAaP,EAAMK,GAErBC,GAAcC,GAAcA,IAAeD,IAE3CE,QACAC,gBAAcN,EAAOE,IACrBE,EACAD,KAGID,GAAQC,SAKXN,MAAAA,EAAOC,cAAAA,IAGLS,EAAiBC,QACdC,IAAVD,EACK,GACEA,aAAiBE,MACnB,eAGKF,EAGHG,EAA0BC,oBACbvB,EAAQa,EAAMM,EAAOK,EAAQC,SAC7CjB,MAAEA,EAAFC,cAASA,GAAkBe,EAC3BE,EAAOC,KAAKT,cAAcC,UAEzBS,qBACLL,EACAf,EACAK,EACAa,EACAjB,EACAgB,KAOAI,EAAqBP,EAAuBQ,gBAC5CC,EAAqBT,EAAuBU,iHAGhDC,oBAAqB,OACrBf,cAAgBA,OAChBX,aAAeA,OAEVP,EAAQS,EAAeyB,EAAc,UACpC1B,YAEA0B,IACMA,EACCP,KAAKM,2BACPE,KAAKnC,GAAQoC,QAASC,MACrBA,GAAOnB,EAAclB,EAAOqC,4CAU5BrC,EAAQa,EAAMM,EAAOK,EAAQC,UAChCI,EAAmB1B,KAAKwB,KAAM3B,EAAQa,EAAMM,EAAOK,EAAQC,eAGxDzB,EAAQa,EAAMM,EAAOK,EAAQC,UAChCM,EAAmB5B,KAAKwB,KAAM3B,EAAQa,EAAMM,EAAOK,EAAQC,aAG1DzB,EAAQsC,EAASC,EAAMf,EAAQC,SACjCjB,MAAEA,EAAFC,cAASA,GAAkBe,GAE3BgB,OAAEA,GAAWD,MACfE,GAAQ,MAEP,IAAIC,EAAQ,EAAGA,EAAQF,EAAQE,IAAS,OACrChB,EAAOC,KAAKT,cAAcqB,EAAKG,MACpBd,qBACfe,YACAnC,EACAoC,OAAOF,GACPhB,EACAjB,EACAgB,IAGkBgB,SAGfA,cAGGzC,EAAQsC,EAASnB,EAAOK,EAAQC,SACpCjB,MAAEA,EAAFC,cAASA,GAAkBe,EAC3BE,EAAOC,KAAKT,cAAcC,UAEzBS,qBACLiB,eACArC,EACAsC,OAAKD,gBACLnB,EACAjB,EACAgB"}