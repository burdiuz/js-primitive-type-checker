{"version":3,"file":"primitive-type-checker.min.js","sources":["../node_modules/@actualwave/has-own/has-own.js","../node_modules/@actualwave/type-checkers/dist/type-checkers.js","../source/utils.js","../source/index.js","../source/minified.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst hasOwn = (\n  (has) =>\n  (target, property) =>\n  Boolean(target && has.call(target, property))\n)(Object.prototype.hasOwnProperty);\n\nexports.hasOwn = hasOwn;\nexports.default = hasOwn;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hasOwn = _interopDefault(require('@actualwave/has-own'));\n\nlet defaultTypeChecker = null;\n\nconst getDefaultTypeChecker = () => defaultTypeChecker;\nconst setDefaultTypeChecker = typeChecker => {\n  defaultTypeChecker = typeChecker;\n};\n\nconst PROXY_WRAP_FUNCTION_RETURN_VALUES = 'wrapFunctionReturnValues';\nconst PROXY_WRAP_FUNCTION_ARGUMENTS = 'wrapFunctionArguments';\nconst PROXY_WRAP_SET_PROPERTY_VALUES = 'wrapSetPropertyValues';\nconst PROXY_IGNORE_PROTOTYPE_METHODS = 'ignorePrototypeMethods';\n\nconst getDefaultProxyConfig = () => ({\n  [PROXY_WRAP_FUNCTION_RETURN_VALUES]: true,\n  [PROXY_WRAP_FUNCTION_ARGUMENTS]: false,\n  [PROXY_WRAP_SET_PROPERTY_VALUES]: true,\n  [PROXY_IGNORE_PROTOTYPE_METHODS]: false\n});\n\nconst config = getDefaultProxyConfig();\n\nconst setProxyConfig = newConfig => Object.assign(config, newConfig);\n\nconst getProxyConfig = () => Object.assign({}, config);\n\nconst getProxyConfigValue = (key, info = null) => hasOwn(info, key) ? info[key] : config[key];\n\n/* eslint-disable import/prefer-default-export */\n\nconst constructErrorString = (action, name, required, received) => `${action}Error on \"${name}\" instead of \"${required}\" received \"${received}\"`;\n\n/* eslint-disable no-console */\n\nconst ConsoleErrorReporter = (action, name, requiredTypeString, actualTypeString) => console.error(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\nconst ConsoleWarnReporter = (action, name, requiredTypeString, actualTypeString) => console.warn(constructErrorString(action, name, requiredTypeString, actualTypeString));\n\n/* eslint-disable import/prefer-default-export */\n\nconst ThrowErrorReporter = (action, name, requiredTypeString, receivedTypeString) => {\n  throw new Error(constructErrorString(action, name, requiredTypeString, receivedTypeString));\n};\n\nlet errorReporter = ConsoleErrorReporter;\n\nconst getErrorReporter = () => errorReporter;\n\nconst setErrorReporter = reporter => {\n  errorReporter = reporter;\n};\n\nlet enabled = true;\n\nconst isEnabled = () => enabled;\nconst setEnabled = (value = true) => {\n  enabled = !!value;\n};\n\nconst INFO_KEY = Symbol('type-checkers::info');\n\nconst createChildrenCache = (children = {}) => Object.assign({}, children);\n\nconst createTargetInfo = (checker, config, deep = true, names = [], children = createChildrenCache()) => ({\n  checker,\n  config,\n  deep,\n  names,\n  children\n});\n\nconst getTargetInfo = target => target ? target[INFO_KEY] : undefined;\n\nconst setTargetInfo = (target, info) => {\n  if (target && info) {\n    target[INFO_KEY] = info;\n  }\n};\n\nconst hasTargetInfo = target => !!getTargetInfo(target);\n\n// TODO three times getting same, might need optimizing\nconst getTargetTypeChecker = target => {\n  if (target) {\n    const info = target[INFO_KEY];\n\n    return info && info.checker || undefined;\n  }\n\n  return undefined;\n};\n\nconst getTargetTypeCheckerConfig = target => {\n  if (target) {\n    const info = target[INFO_KEY];\n\n    return info && info.config || undefined;\n  }\n\n  return undefined;\n};\n\n/*\n  I have had to apply custom key instead of name as is to\n  fix \"construtor\" issue. Since ordinary object has some\n  properties with values from start, these properties were\n  mustakenly returned as child info objects, for example, if\n  requesting hild info for \"constructor\" function of the target,\n  it returned class constructor which caused errors later,\n  when accesing info properties.\n */\nconst getChildInfoKey = name => `@${name}`;\n\nconst mergeChildrenCache = (targetCache, sourceCache) => {\n  for (const key in sourceCache) {\n    if (hasOwn(targetCache, key)) {\n      // eslint-disable-next-line no-use-before-define\n      targetCache[key] = mergeTargetInfo(targetCache[key], sourceCache[key]);\n    } else {\n      targetCache[key] = sourceCache[key];\n    }\n  }\n\n  return targetCache;\n};\n\nconst storeChildInfo = (cache, name, childInfo) => {\n  const key = getChildInfoKey(name);\n  delete cache[key];\n\n  if (childInfo) {\n    cache[key] = childInfo;\n  }\n};\n\nconst storeChildInfoFrom = (cache, name, child) => {\n  storeChildInfo(cache, name, getTargetInfo(child));\n};\n\nconst getChildInfo = (cache, name) => cache[getChildInfoKey(name)];\n\nconst mergeTargetInfo = (targetInfo, sourceInfo) => {\n  const { deep, checker, children, config, names } = targetInfo;\n\n  if (checker === sourceInfo.checker) {\n    targetInfo.deep = deep || sourceInfo.deep;\n    targetInfo.children = mergeChildrenCache(children, sourceInfo.children);\n    targetInfo.config = checker.mergeConfigs(config, sourceInfo.config, names);\n  } else {\n    console.error('TypeChecked objects can be merged only if using exactly same instance of type checker.');\n  }\n\n  return targetInfo;\n};\n\nconst TARGET_KEY = Symbol('type-checkers::target');\n\nconst getOriginalTarget = target => target && target[TARGET_KEY] || target;\n\nconst validTypes = {\n  object: true,\n  function: true\n};\n\nconst isValidTarget = target => Boolean(target && validTypes[typeof target]);\nconst isTypeChecked = target => Boolean(target && target[TARGET_KEY]);\n\nconst getTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, children, names, checker } = info;\n\n  if (deep || value instanceof Function) {\n    const childInfo = getChildInfo(children, property);\n\n    if (childInfo) {\n      value = createFn(value, { info: childInfo });\n    } else {\n      value = createFn(value, { deep, names: [...names, property], checker });\n      storeChildInfoFrom(children, property, value);\n    }\n  }\n\n  return value;\n};\n\nconst isIgnoredProperty = (target, info, property, value) => {\n  if (value instanceof Function && !hasOwn(target, property) && getProxyConfigValue(PROXY_IGNORE_PROTOTYPE_METHODS, info)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getProperty = createFn => (target, property) => {\n  const value = target[property];\n\n  if (property === INFO_KEY) {\n    return value;\n    /*\n    target[TARGET_KEY] is a virtual property accessing which indicates\n    if object is wrapped with type checked proxy or not.\n    */\n  } else if (property === TARGET_KEY) {\n    return target;\n  }\n\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.getProperty) {\n    checker.getProperty(target, property, value, config, names);\n  }\n\n  if (!isValidTarget(value) || isTypeChecked(value) || isIgnoredProperty(target, info, property, value)) {\n    return value;\n  }\n\n  return getTargetProperty(createFn, target, property, value);\n};\n\nconst setNonTargetProperty = (target, property, value) => {\n  if (property === INFO_KEY) {\n    let info = getTargetInfo(target);\n    if (info && value && info !== value) {\n      info = mergeTargetInfo(info, value);\n    } else {\n      info = value;\n    }\n\n    target[property] = info;\n    return true;\n  } else if (!isValidTarget(value)) {\n    const { names, config, checker } = getTargetInfo(target);\n\n    if (checker.setProperty) {\n      checker.setProperty(target, property, value, config, names);\n    }\n\n    target[property] = value;\n    return true;\n  }\n\n  return false;\n};\n\nconst setTargetProperty = (createFn, target, property, value) => {\n  const info = getTargetInfo(target);\n  const { deep, names, checker, config, children } = info;\n\n  if (checker.setProperty) {\n    checker.setProperty(target, property, value, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_SET_PROPERTY_VALUES, info)) {\n    if (!isTypeChecked(value)) {\n      const childInfo = getChildInfo(children, property);\n\n      if (childInfo) {\n        value = createFn(value, { info: childInfo });\n      } else {\n        value = createFn(value, { deep, names: [...names, property], checker });\n      }\n    }\n\n    storeChildInfoFrom(children, property, value);\n  }\n\n  target[property] = value;\n  return true;\n};\n\nconst setProperty = createFn => (target, property, value) => {\n  if (property === TARGET_KEY) {\n    throw new Error(`\"${TARGET_KEY}\" is a virtual property and cannot be set`);\n  }\n\n  return setNonTargetProperty(target, property, value) || setTargetProperty(createFn, target, property, value);\n};\n\n/* eslint-disable import/prefer-default-export */\n\nconst getTypeCheckedChild = (createFn, info, name, value) => {\n  if (!isValidTarget(value)) {\n    return value;\n  }\n\n  let result = value;\n\n  if (!isTypeChecked(value)) {\n    const { children } = info;\n    const childInfo = getChildInfo(children, name);\n\n    if (childInfo) {\n      result = createFn(value, { info: childInfo });\n    } else {\n      const { deep, names, checker } = info;\n      result = createFn(value, { deep, names: [...names, name], checker });\n      storeChildInfoFrom(children, name, result);\n    }\n  }\n\n  return result;\n};\n\nconst getTargetArguments = (createFn, target, argumentsList) => {\n  const info = getTargetInfo(target);\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_ARGUMENTS, info)) {\n    const { length } = argumentsList;\n    // FIXME cache arguments info objects as children\n    for (let index = 0; index < length; index++) {\n      argumentsList[index] = getTypeCheckedChild(createFn, info, String(index), argumentsList[index]);\n    }\n  }\n\n  return argumentsList;\n};\n\nconst callFunction = createFn => (target, thisArg, argumentsList) => {\n  const info = getTargetInfo(target);\n  const { names, config, checker } = info;\n\n  if (checker.arguments) {\n    checker.arguments(target, thisArg, argumentsList, config, names);\n  }\n\n  argumentsList = getTargetArguments(createFn, target, argumentsList);\n\n  let result = target.apply(thisArg, argumentsList);\n\n  if (checker.returnValue) {\n    checker.returnValue(target, thisArg, result, config, names);\n  }\n\n  if (getProxyConfigValue(PROXY_WRAP_FUNCTION_RETURN_VALUES, info)) {\n    result = getTypeCheckedChild(createFn, info, 'returnValue', result);\n  }\n\n  return result;\n};\n\nlet getProperty$1;\nlet setProperty$1;\nlet callFunction$1;\n\nconst objectProxy = target => new Proxy(target, {\n  get: getProperty$1,\n  set: setProperty$1\n});\n\nconst functionProxy = target => new Proxy(target, {\n  get: getProperty$1,\n  set: setProperty$1,\n  apply: callFunction$1,\n  construct: callFunction$1\n});\n\nconst wrapWithProxy = target => {\n  if (target instanceof Function) {\n    return functionProxy(target);\n  }\n\n  return objectProxy(target);\n};\n\nconst createInfoFromOptions = (target, {\n  deep = true,\n  names = [],\n  config = null,\n  children = null,\n  checker = getDefaultTypeChecker(),\n  info = null // exclusive option, if set other options being ignored\n} = {}) => info || createTargetInfo(checker, checker.init(target, getErrorReporter(), config), deep, names, createChildrenCache(children));\n\nconst create = (target, options) => {\n  if (!isValidTarget(target) || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  setTargetInfo(target, createInfoFromOptions(target, options));\n\n  return wrapWithProxy(target);\n};\n\ngetProperty$1 = getProperty(create);\nsetProperty$1 = setProperty(create);\ncallFunction$1 = callFunction(create);\n\nconst deepInitializer = (target, options) => {\n  const info = createInfoFromOptions(target, options);\n  const { deep, names, checker, config, children } = info;\n\n  Object.keys(target).forEach(name => {\n    const value = target[name];\n\n    checker.getProperty(target, name, value, config, names);\n\n    if (isValidTarget(value)) {\n      let childInfo = getChildInfo(children, name);\n\n      if (childInfo) {\n        deepInitializer(value, { info: childInfo });\n      } else {\n        childInfo = deepInitializer(value, {\n          deep,\n          names: [...names, name],\n          checker\n        });\n        storeChildInfo(children, name, childInfo);\n      }\n    }\n  });\n\n  setTargetInfo(target, info);\n\n  return info;\n};\n\nconst createDeep = (target, options) => {\n  if (!target || typeof target !== 'object' || !isEnabled() || isTypeChecked(target)) {\n    return target;\n  }\n\n  deepInitializer(target, options);\n\n  return wrapWithProxy(target);\n};\n\nconst merge = (options, ...sources) => {\n  let target = {};\n\n  if (isEnabled()) {\n    if (!options) {\n      options = {\n        info: getTargetInfo(sources.find(item => hasTargetInfo(item))),\n        deep: false\n      };\n    }\n\n    target = create(target, options);\n  }\n\n  return Object.assign(target, ...sources);\n};\n\n// TODO if enabled, replaces original value with type checked\nconst properties = (target, options = undefined, ...names) => {\n  if (!isEnabled()) {\n    return target;\n  }\n\n  if (!isValidTarget(target)) {\n    throw new Error('Target must be a valid object.');\n  }\n\n  if (Object.isFrozen(target) || Object.isSealed(target)) {\n    throw new Error('Target object should not be sealed or frozen.');\n  }\n\n  if (!names.length) {\n    // Symbols and non-enumerables must be explicitly specified\n    names = Object.keys(target);\n  }\n\n  const { length } = names;\n  for (let index = 0; index < length; index += 1) {\n    const name = names[index];\n    const { writable, get, set } = Object.getOwnPropertyDescriptor(target, name);\n\n    // Prohibit applying to properties with accessor/mutator pair?\n    if (get && set || writable) {\n      const value = target[name];\n\n      if (isValidTarget(value) && !isTypeChecked(value)) {\n        target[name] = create(value, options);\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.getDefaultTypeChecker = getDefaultTypeChecker;\nexports.setDefaultTypeChecker = setDefaultTypeChecker;\nexports.PROXY_WRAP_FUNCTION_RETURN_VALUES = PROXY_WRAP_FUNCTION_RETURN_VALUES;\nexports.PROXY_WRAP_FUNCTION_ARGUMENTS = PROXY_WRAP_FUNCTION_ARGUMENTS;\nexports.PROXY_WRAP_SET_PROPERTY_VALUES = PROXY_WRAP_SET_PROPERTY_VALUES;\nexports.PROXY_IGNORE_PROTOTYPE_METHODS = PROXY_IGNORE_PROTOTYPE_METHODS;\nexports.getDefaultProxyConfig = getDefaultProxyConfig;\nexports.setProxyConfig = setProxyConfig;\nexports.getProxyConfig = getProxyConfig;\nexports.create = create;\nexports.createDeep = createDeep;\nexports.ConsoleErrorReporter = ConsoleErrorReporter;\nexports.ConsoleWarnReporter = ConsoleWarnReporter;\nexports.ThrowErrorReporter = ThrowErrorReporter;\nexports.getErrorReporter = getErrorReporter;\nexports.setErrorReporter = setErrorReporter;\nexports.isEnabled = isEnabled;\nexports.setEnabled = setEnabled;\nexports.getTargetInfo = getTargetInfo;\nexports.setTargetInfo = setTargetInfo;\nexports.hasTargetInfo = hasTargetInfo;\nexports.getTargetTypeChecker = getTargetTypeChecker;\nexports.getTargetTypeCheckerConfig = getTargetTypeCheckerConfig;\nexports.mergeTargetInfo = mergeTargetInfo;\nexports.getOriginalTarget = getOriginalTarget;\nexports.merge = merge;\nexports.properties = properties;\nexports.isTypeChecked = isTypeChecked;\nexports.isValidTarget = isValidTarget;\nexports.default = create;\n//# sourceMappingURL=type-checkers.js.map\n","export const MERGE = '(Merge)';\nexport const GET_PROPERTY = '(GetProperty)';\nexport const SET_PROPERTY = '(SetProperty)';\nexport const ARGUMENTS = '(Arguments)';\nexport const RETURN_VALUE = '(ReturnValue)';\n\nexport function AsIs(value) {\n  if (this instanceof AsIs) {\n    this.value = value;\n  } else {\n    return new AsIs(value);\n  }\n}\n\nfunction asIs() {\n  return this.value;\n}\n\nAsIs.prototype.toString = asIs;\nAsIs.prototype.valueOf = asIs;\nAsIs.prototype[Symbol.toPrimitive] = asIs;\n\nexport const buildPath = (sequence) =>\n  sequence.reduce((str, name) => {\n    if (name instanceof AsIs) {\n      return `${str}${name}`;\n    } else if (String(parseInt(name, 10)) === name) {\n      return `${str}[${name}]`;\n    } else if (/^[a-z][\\w$]*$/i.test(name)) {\n      return str ? `${str}.${name}` : name;\n    }\n\n    return `${str}[\"${name}\"]`;\n  }, '');\n\nexport const checkPrimitiveType = (\n  action,\n  types,\n  name,\n  type,\n  errorReporter,\n  sequence,\n) => {\n  if (!type) {\n    return true;\n  }\n\n  const storedType = types[name];\n\n  if (storedType) {\n    if (storedType !== type) {\n      errorReporter(action, buildPath([...sequence, name]), storedType, type);\n\n      return false;\n    }\n  } else {\n    types[name] = type;\n  }\n\n  return true;\n};\n","import hasOwn from '@actualwave/has-own';\n\nimport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  buildPath,\n  AsIs,\n  checkPrimitiveType,\n} from './utils';\n\nconst mergeConfigs = ({ types, errorReporter }, source, names = []) => {\n  const sourceTypes = source.types;\n\n  for (const name in sourceTypes) {\n    if (hasOwn(sourceTypes, name)) {\n      const sourceType = sourceTypes[name];\n      const targetType = types[name];\n\n      if (sourceType && targetType && targetType !== sourceType) {\n        errorReporter(\n          MERGE,\n          buildPath([...names, name]),\n          targetType,\n          sourceType,\n        );\n      } else {\n        types[name] = sourceType;\n      }\n    }\n  }\n\n  return { types, errorReporter };\n};\n\nconst getTypeString = (value) => {\n  if (value === undefined) {\n    return '';\n  } else if (value instanceof Array) {\n    return 'array';\n  }\n\n  return typeof value;\n};\n\nconst propertyCheckerFactory = (action) => {\n  function checkValueType(target, name, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      action,\n      types,\n      name,\n      type,\n      errorReporter,\n      sequence,\n    );\n  }\n\n  return checkValueType;\n};\n\nconst getPropertyChecker = propertyCheckerFactory(GET_PROPERTY);\nconst setPropertyChecker = propertyCheckerFactory(SET_PROPERTY);\n\nclass PrimitiveTypeChecker {\n  collectTypesOnInit = true;\n  getTypeString = getTypeString;\n  mergeConfigs = mergeConfigs;\n\n  init(target, errorReporter, cachedTypes = null) {\n    let types = {};\n\n    if (cachedTypes) {\n      types = cachedTypes;\n    } else if (this.collectTypesOnInit) {\n      Object.keys(target).forEach((key) => {\n        types[key] = getTypeString(target[key]);\n      });\n    }\n\n    return {\n      types,\n      errorReporter,\n    };\n  }\n\n  getProperty(target, name, value, config, sequence) {\n    return getPropertyChecker.call(this, target, name, value, config, sequence);\n  }\n\n  setProperty(target, name, value, config, sequence) {\n    return setPropertyChecker.call(this, target, name, value, config, sequence);\n  }\n\n  arguments(target, thisArg, args, config, sequence) {\n    const { types, errorReporter } = config;\n\n    const { length } = args;\n    let valid = true;\n\n    for (let index = 0; index < length; index++) {\n      const type = this.getTypeString(args[index]);\n      const agrValid = checkPrimitiveType(\n        ARGUMENTS,\n        types,\n        String(index),\n        type,\n        errorReporter,\n        sequence,\n      );\n\n      valid = agrValid && valid;\n    }\n\n    return valid;\n  }\n\n  returnValue(target, thisArg, value, config, sequence) {\n    const { types, errorReporter } = config;\n    const type = this.getTypeString(value);\n\n    return checkPrimitiveType(\n      RETURN_VALUE,\n      types,\n      AsIs(RETURN_VALUE),\n      type,\n      errorReporter,\n      sequence,\n    );\n  }\n}\n\nexport {\n  MERGE,\n  ARGUMENTS,\n  GET_PROPERTY,\n  RETURN_VALUE,\n  SET_PROPERTY,\n  buildPath,\n  AsIs,\n  checkPrimitiveType,\n  mergeConfigs,\n  getTypeString,\n  propertyCheckerFactory,\n  PrimitiveTypeChecker,\n};\n\nexport default PrimitiveTypeChecker;\n","/* eslint-disable import/no-extraneous-dependencies */\nconst typeCheckers = require('@actualwave/type-checkers');\nconst primitive = require('./index');\n\ntypeCheckers.setDefaultTypeChecker(new primitive.PrimitiveTypeChecker());\n\nObject.assign(exports, primitive, typeCheckers);\n"],"names":["Object","defineProperty","exports","value","hasOwn","has","target","property","Boolean","call","prototype","hasOwnProperty","ex","require$$0","defaultTypeChecker","getDefaultTypeChecker","getDefaultProxyConfig","wrapFunctionReturnValues","wrapFunctionArguments","wrapSetPropertyValues","ignorePrototypeMethods","config","getProxyConfigValue","key","info","constructErrorString","action","name","required","received","ConsoleErrorReporter","requiredTypeString","actualTypeString","console","error","errorReporter","getErrorReporter","enabled","isEnabled","INFO_KEY","Symbol","createChildrenCache","children","assign","getTargetInfo","undefined","setTargetInfo","hasTargetInfo","getChildInfoKey","storeChildInfo","cache","childInfo","storeChildInfoFrom","child","getChildInfo","mergeTargetInfo","targetInfo","sourceInfo","deep","checker","names","targetCache","sourceCache","mergeChildrenCache","mergeConfigs","TARGET_KEY","validTypes","object","function","isValidTarget","isTypeChecked","getTypeCheckedChild","createFn","result","getProperty$1","setProperty$1","callFunction$1","wrapWithProxy","Function","Proxy","get","set","apply","construct","functionProxy","objectProxy","createInfoFromOptions","createTargetInfo","init","create","options","getProperty","isIgnoredProperty","getTargetProperty","Error","setProperty","setNonTargetProperty","setTargetProperty","thisArg","argumentsList","arguments","length","index","String","getTargetArguments","returnValue","callFunction","deepInitializer","keys","forEach","typeChecker","newConfig","warn","receivedTypeString","reporter","sources","find","item","isFrozen","isSealed","writable","getOwnPropertyDescriptor","ARGUMENTS","RETURN_VALUE","AsIs","this","asIs","toString","valueOf","toPrimitive","buildPath","sequence","reduce","str","parseInt","test","checkPrimitiveType","types","type","storedType","source","sourceTypes","sourceType","targetType","getTypeString","Array","propertyCheckerFactory","getPropertyChecker","setPropertyChecker","PrimitiveTypeChecker","collectTypesOnInit","cachedTypes","args","valid","typeCheckers","setDefaultTypeChecker","primitive"],"mappings":"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"}